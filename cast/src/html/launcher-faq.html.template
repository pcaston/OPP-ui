<!DOCTYPE html>
<html>
  <head>
    <title>Open Peer Power Cast - FAQ</title>
    <link rel="icon" href="/images/op-cast-icon.png" type="image/png" />
    <%= renderTemplate('_style_base') %>
    <style>
      body {
        background-color: #e5e5e5;
      }
    </style>
    <meta property="fb:app_id" content="338291289691179" />
    <meta property="og:title" content="FAQ - Open Peer Power Cast" />
    <meta property="og:site_name" content="Open Peer Power Cast" />
    <meta property="og:url" content="https://cast.open-peer-power.io/" />
    <meta property="og:type" content="website" />
    <meta
      property="og:description"
      content="Frequently asked questions about Open Peer Power Cast."
    />
    <meta
      property="og:image"
      content="https://cast.open-peer-power.io/images/google-nest-hub.png"
    />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@open_peer_power" />
    <meta name="twitter:title" content="FAQ - Open Peer Power Cast" />
    <meta
      name="twitter:description"
      content="Frequently asked questions about Open Peer Power Cast."
    />
    <meta
      name="twitter:image"
      content="https://cast.open-peer-power.io/images/google-nest-hub.png"
    />
  </head>
  <body>
    <%= renderTemplate('_js_base') %>

    <script type="module" crossorigin="use-credentials">
      import "<%= latestLauncherJS %>";
    </script>

    <script nomodule>
      (function() {
        // // Safari 10.1 supports type=module but ignores nomodule, so we add this check.
        if (!isS101) {
          _ls("/static/polyfills/custom-elements-es5-adapter.js");
          _ls("<%= es5LauncherJS %>");
        }
      })();
    </script>

    <hc-layout subtitle="FAQ">
      <style>
        a {
          color: var(--primary-color);
        }
      </style>
      <div class="card-content">
        <p><a href="/">&laquo; Back to Open Peer Power Cast</a></p>
      </div>

      <div class="section-header">What is Open Peer Power Cast?</div>
      <div class="card-content">
        <p>
          Open Peer Power Cast allows you to show your Open Peer Power data on a
          Chromecast device and allows you to interact with Open Peer Power on
          Google Assistant devices with a screen.
        </p>
      </div>

      <div class="section-header">
        What are the Open Peer Power Cast requirements?
      </div>
      <div class="card-content">
        <p>
          Open Peer Power Cast requires a Open Peer Power installation that is
          accessible via HTTPS (the url starts with "https://").
        </p>
      </div>

      <div class="section-header">What is Open Peer Power?</div>
      <div class="card-content">
        <p>
          Open Peer Power is worlds biggest open source home automation platform
          with a focus on privacy and local control. You can install Home
          Assistant for free.
        </p>
        <p>
          <a href="https://www.open-peer-power.io" target="_blank"
            >Visit the Open Peer Power website.</a
          >
        </p>
      </div>

      <div class="section-header" id="https">
        Why does my Open Peer Power needs to be served using HTTPS?
      </div>
      <div class="card-content">
        <p>
          The Chromecast only works with websites served over HTTPS. This means
          that the Open Peer Power Cast app that runs on your Chromecast is
          served over HTTPS. Websites served over HTTPS are restricted on what
          content can be accessed on websites served over HTTP. This is called
          mixed active content (<a
            href="https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content#Mixed_active_content"
            target="_blank"
            >learn more @ MDN</a
          >).
        </p>
        <p>
          The easiest way to get your Open Peer Power installation served over
          HTTPS is by signing up for
          <a href="https://www.nabucasa.com" target="_blank"
            >Open Peer Power Cloud by Nabu Casa</a
          >.
        </p>
      </div>

      <div class="section-header" id="https">
        Why does Open Peer Power Cast require me to authorize my Open Peer Power
        instance?
      </div>
      <div class="card-content">
        <p>
          You're currently looking at the Open Peer Power Cast launcher
          application. This is a standalone application to launch Open Peer Power
          Cast on your Chromecast. Because Chromecasts do not allow us to log in
          to Open Peer Power, we need to supply authentication to it from the
          launcher. This authentication is obtained when you authorize your
          instance. Your authentication credentials will remain in your browser
          and on your Cast device.
        </p>
        <p>
          Your authentication credentials or Open Peer Power url are never sent
          to the Cloud. You can validate this behavior in
          <a
            href="https://github.com/open-peer-power/open-peer-power-polymer/tree/dev/cast"
            target="_blank"
            >the source code</a
          >.
        </p>
        <p>
          The launcher application exists to make it possible to use Home
          Assistant Cast with older versions of Open Peer Power.
        </p>
        <p>
          Starting with Open Peer Power 0.97, Open Peer Power Cast is also built
          into the Devcon UI as a special entities card row. Since the
          Devcon UI already has authentication, you will be able to start
          casting right away.
        </p>
      </div>

      <div class="section-header">Wat does Open Peer Power Cast do?</div>
      <div class="card-content">
        <p>
          Open Peer Power Cast is a receiver application for the Chromecast. When
          loaded, it will make a direct connection to your Open Peer Power
          instance.
        </p>
        <p>
          Open Peer Power Cast is able to render any of your Devcon views on
          your Chromecast. Things that work in Devcon in Open Peer Power will
          work in Open Peer Power Cast:
        </p>
        <ul>
          <li>Render Devcon views, including custom cards</li>
          <li>
            Real-time data stream will ensure the UI always shows the latest
            state of your house
          </li>
          <li>Navigate between views using navigate actions or weblinks</li>
          <li>
            Instant updates of the casted Devcon UI when you update your
            Devcon configuration.
          </li>
        </ul>
        <p>Things that currently do not work:</p>
        <ul>
          <li>
            Live videostreams using the streaming integration
          </li>
          <li>Specifying a view with a single card with "panel: true".</li>
        </ul>
      </div>

      <div class="section-header" id="https">
        How do I change what is shown on my Chromecast?
      </div>
      <div class="card-content">
        <p>
          Open Peer Power Cast allows you to show your Devcon view on your
          Chromecast. So to edit what is shown, you need to edit your Devcon
          UI.
        </p>
        <p>
          To edit your Devcon UI, open Open Peer Power, click on the three-dot
          menu in the top right and click on "Configure UI".
        </p>
      </div>

      <div class="section-header" id="browser">
        What browsers are supported?
      </div>
      <div class="card-content">
        <p>
          Chromecast is a technology developed by Google, and is available on:
        </p>
        <ul>
          <li>Google Chrome (all platforms except on iOS)</li>
          <li>
            Microsoft Edge (all platforms,
            <a href="https://www.microsoftedgeinsider.com" target="_blank"
              >dev and canary builds only</a
            >)
          </li>
        </ul>
      </div>

      <div class="section-header">Why do some custom cards not work?</div>
      <div class="card-content">
        <p>
          Open Peer Power needs to be configured to allow Open Peer Power Cast to
          load custom cards. Starting with Open Peer Power 0.97, this is done
          automatically. If you are on an older version, or have manually
          configured CORS for the HTTP integration, add the following to your
          configuration.yaml file:
        </p>
        <pre>
http:
  cors_allowed_origins:
    - https://cast.open-peer-power.io</pre
        >
        <p>
          Some custom cards rely on things that are only available in the normal
          Open Peer Power interface. This requires an update by the custom card
          developer.
        </p>
        <p>
          If you're a custom card developer: the most common mistake is that
          LitElement is extracted from an element that is not available on the
          page.
        </p>
      </div>
    </hc-layout>

    <script>
      var _gaq = [["_setAccount", "UA-57927901-9"], ["_trackPageview"]];
      (function(d, t) {
        var g = d.createElement(t),
          s = d.getElementsByTagName(t)[0];
        g.src =
          ("https:" == location.protocol ? "//ssl" : "//www") +
          ".google-analytics.com/ga.js";
        s.parentNode.insertBefore(g, s);
      })(document, "script");
    </script>
  </body>
</html>
